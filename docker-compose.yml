version: '3.4'

services:
  client:
    image: ${CONTAINER_REGISTRY_BASE}/client
    container_name: tavern-of-cho-client
    build:
      context: ./client
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/client
    env_file:
      - ./client/.env
    volumes:
      - ./client:/usr/src/client:rw,cached
      - /usr/src/client/node_modules

  admin:
    image: ${CONTAINER_REGISTRY_BASE}/admin
    container_name: tavern-of-cho-admin
    build:
      context: ./admin
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/admin
    env_file:
      - ./admin/.env
    volumes:
      - ./admin:/usr/src/admin:rw,cached
      - /usr/src/admin/node_modules

  php:
    image: ${CONTAINER_REGISTRY_BASE}/php
    container_name: tavern-of-cho-php
    build:
      context: ./api
      target: api_platform_php
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/php
        - ${CONTAINER_REGISTRY_BASE}/nginx
    depends_on:
      - db
    env_file:
      - ./api/.env
    volumes:
      - ./api:/srv/api:rw,cached

  api:
    image: ${CONTAINER_REGISTRY_BASE}/nginx
    container_name: tavern-of-cho-api
    build:
      context: ./api
      target: api_platform_nginx
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/php
        - ${CONTAINER_REGISTRY_BASE}/nginx
    depends_on:
      - php
    volumes:
      - ./api/public:/srv/api/public:ro

  db:
    image: postgres:10.2-alpine
    container_name: tavern-of-cho-db
    environment:
      - POSTGRES_DB=api
      - POSTGRES_USER=api-platform
      - POSTGRES_PASSWORD=!ChangeMe!
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"

  website:
    build: ./website
    container_name: tavern-of-cho-website
    volumes:
      - ./website:/app
    working_dir: /app
    command: 'yarn start'
    ports:
      - "9005:9005"  #Firebase

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.0
    container_name: tavern-of-cho-elasticsearch
    volumes:
      - elasticdata:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - discovery.type=single-node

  mercure:
    image: dunglas/mercure
    container_name: tavern-of-cho-mercure
    environment:
      - JWT_KEY=!UnsecureChangeMe!
      - ALLOW_ANONYMOUS=1
      - CORS_ALLOWED_ORIGINS=*
      - PUBLISH_ALLOWED_ORIGINS=http://localhost:8053
      - DEMO=1
    ports:
      - "8053:80"

  h2-proxy:
    container_name: tavern-of-cho-h2_proxy
    build:
      context: ./h2-proxy
    depends_on:
      - client
      - admin
      - api
      - website
    ports:
      - "8050:443"  #Client
      - "8051:444"  # Admin
      - "8052:8052" # Api
      - "8054:445"  # Website

volumes:
  elasticdata: {}
  db-data: {}
